name: Build CMake for Android (All Architectures)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [arm64-v8a, armeabi-v7a, x86_64, x86]

    steps:
    - name: Checkout Patched CMake Source
      uses: actions/checkout@v4
      with:
        repository: ultrasina681/CMake
        ref: master
        path: CMake

    - name: Setup NDK r29
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r29
        add-to-path: true

    - name: Verify Patches
      run: |
        cd CMake
        echo "=== Checking android_compat.h ==="
        ls -la Utilities/cmlibuv/src/unix/android_compat.h
        echo ""
        echo "=== Checking android_lf.h ==="
        ls -la Utilities/cmlibarchive/libarchive/android_lf.h
        echo ""
        echo "=== Verifying core.c patches ==="
        grep -n "__ANDROID__" Utilities/cmlibuv/src/unix/core.c | head -5
        echo ""
        echo "=== Verifying process.c patches ==="
        grep -n "__ANDROID__" Utilities/cmlibuv/src/unix/process.c | head -5

    - name: Configure Android Build
      run: |
        cd CMake
        
        case "${{ matrix.arch }}" in
          arm64-v8a) CLANG_PREFIX="aarch64-linux-android" ;;
          armeabi-v7a) CLANG_PREFIX="armv7a-linux-androideabi" ;;
          x86_64) CLANG_PREFIX="x86_64-linux-android" ;;
          x86) CLANG_PREFIX="i686-linux-android" ;;
        esac
        
        echo "CLANG_PREFIX=$CLANG_PREFIX" >> $GITHUB_ENV
        
        mkdir -p build-${{ matrix.arch }}
        cd build-${{ matrix.arch }}
        
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=${{ matrix.arch }} \
          -DANDROID_PLATFORM=android-21 \
          -DCMAKE_BUILD_TYPE=MinSizeRel \
          -DCMAKE_C_FLAGS="-Os -ffunction-sections -fdata-sections" \
          -DCMAKE_CXX_FLAGS="-Os -ffunction-sections -fdata-sections" \
          -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--gc-sections -Wl,--strip-all -Wl,-z,max-page-size=16384" \
          -DCMAKE_THREAD_LIBS_INIT="" \
          -DCMAKE_HAVE_THREADS_LIBRARY=OFF \
          -DCMAKE_USE_PTHREADS_INIT=OFF \
          -DBUILD_TESTING=OFF \
          -DBUILD_QtDialog=OFF \
          -DCMAKE_USE_SYSTEM_LIBRARIES=OFF

    - name: Build CMake
      run: |
        cd CMake/build-${{ matrix.arch }}
        make -j$(nproc)
        
        if [ ! -f lib/libCMakeLib.a ]; then
          echo "ERROR: Build failed - libCMakeLib.a not found"
          exit 1
        fi
        
        echo "✓ Build successful"
        ls -lh lib/libCMakeLib.a

    - name: Create Shared Library
      run: |
        cd CMake/build-${{ matrix.arch }}
        
        $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ env.CLANG_PREFIX }}21-clang++ \
          -shared -o libcmake.so \
          -Wl,--whole-archive lib/libCMakeLib.a -Wl,--no-whole-archive \
          -Os -ffunction-sections -fdata-sections \
          -Wl,--gc-sections -Wl,--strip-all -Wl,-z,max-page-size=16384 \
          -fPIC -ldl -llog -latomic
        
        $ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip --strip-unneeded libcmake.so
        
        echo "✓ Created libcmake.so"
        ls -lh libcmake.so
        file libcmake.so

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cmake-android-${{ matrix.arch }}
        path: CMake/build-${{ matrix.arch }}/libcmake.so
        retention-days: 30

    - name: Build Summary
      run: |
        cd CMake/build-${{ matrix.arch }}
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "  CMake Android - ${{ matrix.arch }}"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "Architecture: ${{ matrix.arch }}"
        echo "Min API:      21 (Android 5.0+)"
        echo "Size:         $(ls -lh libcmake.so | awk '{print $5}')"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"